name: Xodium CI/CD
run-name: "Xodium CI/CD"

on: { push: { branches: [main], paths: ["src/**"] }, workflow_dispatch }

permissions: { contents: write, packages: write }

concurrency:
  {
    group: "${{ github.workflow }}-${{ github.ref }}",
    cancel-in-progress: true,
  }

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      {
        name: "${{ github.ref_name }}",
        url: "${{ steps.upload_artifact.outputs.artifact-url }}",
      }
    outputs: { VERSION: "${{ steps.get_version.outputs.VERSION }}" }
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@main

      - id: setup_rust
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@b38f618be2096d3fc834d239085766ecdc8f4b62
        with: { toolchain: stable }

      - id: build_artifact
        name: Build Artifact
        run: cargo build --release

      - id: install_toml_cli
        name: Install toml-cli
        run: cargo install toml-cli

      - id: get_version
        name: Get Version
        run: echo "VERSION=$(toml get Cargo.toml package.version | tr -d '\"')" >> $GITHUB_OUTPUT

      - id: upload_artifact
        name: Upload Artifact
        uses: actions/upload-artifact@main
        with: { name: xbim, path: target/release/xBIM.* }

  release:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      {
        name: "${{ github.ref_name }}",
        url: "${{ steps.create_release.outputs.url }}",
      }
    steps:
      - id: download_artifact
        name: Download Artifact
        uses: actions/download-artifact@main
        with: { name: xbim }

      - id: create_release
        name: Create Release
        uses: softprops/action-gh-release@daffc988f27cd136af07d2cdcbf7ceae2993875d
        env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
        with:
          draft: ${{ contains(github.event.head_commit.message, '.draft') }}
          generate_release_notes: true
          prerelease: ${{ contains(github.event.head_commit.message, '.pre') }}
          tag_name: v${{ needs.build.outputs.VERSION }}
          files: .
